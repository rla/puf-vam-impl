<?xml version="1.0"?>

<project name="tr-fn" default="all">
	<property name="src" value="src" />
	<property name="lib" value="lib" />
	<property name="build" value="build" />
	<property name="doc" value="doc" />
	<property name="jar" value="puf2vam.jar" />
	<property name="doc.javadoc" value="${doc}/javadoc" />
	<property name="doc.test.reports" value="${doc}/reports" />
	<property name="doc.emma.reports" value="${doc}/coverage-reports" />
	<property name="doc.pmd.reports" value="${doc}/pmd-reports" />
	<property name="doc.profile.path" value="${doc}/profile-path" />
	<property name="pmd.rules" value="basic" />
	<property name="doc.pmd.reports" value="${doc}/pmd-reports" />

	<path id="compile.classpath">
		<pathelement path="${build}" />
		<fileset dir="${lib}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	
    <target name="gen-code" description="Generate code from grammar files">
    	<java classpathref="compile.classpath" classname="org.antlr.Tool">
    		<arg value="${src}/tr/fn/grammar/Puf.g" />
    		<arg value="-o ${src}/tr/fn/grammar" />
    	</java>
    </target>

	<target name="compile" depends="gen-code" description="Compile the project">
		<mkdir dir="${build}" />
		<javac destdir="${build}" debug="true">
			<src path="${src}" />
			<classpath refid="compile.classpath" />
		</javac>
	</target>
	
	<target name="test" depends="compile" description="Runs essential test-cases">
		<delete dir="${doc.test.reports}" />
		<mkdir dir="${doc.test.reports}" />

		<junit printsummary="yes" haltonfailure="yes">
			<classpath refid="compile.classpath" />
			<formatter type="plain" />
			<batchtest fork="yes" todir="${doc.test.reports}">
				<fileset dir="${src}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>
	
	<taskdef resource="emma_ant.properties" classpathref="compile.classpath" />
	
	<target name="test-coverage" depends="compile" description="Runs all test cases and creates the report of coverage">
		<delete dir="${doc.test.reports}" />
		<delete dir="${doc.emma.reports}" />
		<mkdir dir="${doc.test.reports}" />
		<mkdir dir="${doc.emma.reports}" />

		<emma enabled="true">
			<instr instrpath="${build}" mode="overwrite" metadatafile="${doc.emma.reports}/metadata.emma" />
		</emma>

		<junit printsummary="yes" haltonfailure="yes">
			<classpath refid="compile.classpath" />
			<formatter type="plain" />
			<batchtest fork="yes" todir="${doc.test.reports}">
				<fileset dir="${src}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>

		<move file="coverage.ec" todir="${doc.emma.reports}" />

		<emma enabled="true">
			<report sourcepath="${src}">
				<infileset dir="${doc.emma.reports}" includes="*.em*, *.ec" />
				<html outfile="${doc.emma.reports}/coverage.html" />
			</report>
		</emma>
	</target>

	<target name="clean" description="Clean the project">
		<delete dir="${build}" />
	</target>
	
	<target name="javadoc" description="Creates JavaDoc documentation for the project">
		<mkdir dir="${doc.javadoc}" />
		<javadoc destdir="${doc.javadoc}" sourcepath="${src}" packagenames="tr.fn.*" />
	</target>
	
	<target name="jar" depends="compile, test" description="Package the project into jar">
		<jar destfile="${jar}" basedir="${build}" />
	</target>
	
	<target name="all" depends="javadoc, jar" description="Compile everything and run test">
		<mkdir dir="${build}" />
		<javac destdir="${build}" debug="true">
			<src path="${src}" />
			<classpath refid="compile.classpath" />
		</javac>
	</target>
	
	<target name="pmd" description="Checks code with PMD and creates the report">
		<delete dir="${doc.pmd.reports}" />
		<mkdir dir="${doc.pmd.reports}" />

		<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="compile.classpath" />
		<pmd shortFilenames="true" rulesetfiles="${basedir}/etc/pmd-rules.xml">
			<formatter type="html" toFile="${doc.pmd.reports}/report.html" />
			<fileset dir="${src}">
				<include name="**/*.java" />
				<exclude name="**/PufParser.java" />
				<exclude name="**/PufLexer.java" />
			</fileset>
		</pmd>
	</target>
</project>